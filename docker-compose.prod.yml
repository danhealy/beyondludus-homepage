# Only used for production.

version: '3.7'

volumes:
  db-data:
    external: false
  redis-data:
    external: false

networks:
  frontend:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true

services:
  postgres:
    # 9.6 is freshest version available in Google Cloud SQL
    image: postgres:9.6-alpine
    env_file: .env.prod
    volumes:
      - db-data:/var/lib/postgresql/db-data
    networks:
      - backend

  redis:
    image: redis:4.0.10-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: gcr.io/beyondludus-homepage/github-danhealy-beyondludus-homepage:${BEYONDLUDUS_SHA_TAG}
    env_file: .env.prod
    depends_on:
      - redis
    command: "bin/bundle exec sidekiq -C config/sidekiq.yml"
    networks:
      - backend

  lb:
    image: traefik
    command:
      - "--api --logLevel=DEBUG --docker --docker.domain=beyondludus.com"
      - "--docker.swarmMode --docker.watch --docker.network=frontend"
      - "--defaultEntryPoints=http,https"
      - "--entryPoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entryPoints=Name:https Address::443 TLS"
      - "--retry --acme --acme.email=dan@beyondludus.com"
      - "--acme.storage=/acme.json --acme.entryPoint=https --acme.onHostRule"
      - "--acme.httpChallenge --acme.httpChallenge.entryPoint=http"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml # Using labels and command args instead of toml
      - /beyondludus/acme.json:/acme.json # Had to create this empty file manually
    networks:
      - frontend
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "false"

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: gcr.io/beyondludus-homepage/github-danhealy-beyondludus-homepage:${BEYONDLUDUS_SHA_TAG}
    env_file: .env.prod
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - lb
    networks:
      - backend
      - frontend
    deploy:
      labels:
        traefik.docker.network: "beyondludus_frontend"
        traefik.port: 3000
        traefik.backend: "web"
        traefik.domain: "beyondludus.com"
        traefik.frontend.rule: "Host:beyondludus.com"
        traefik.frontend.entryPoints: "https"
        traefik.frontend.headers.forceSTSHeader: true
        traefik.frontend.headers.STSSeconds: 315360000
        traefik.frontend.headers.STSIncludeSubdomains: true
        traefik.frontend.headers.STSPreload: true
