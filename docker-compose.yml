# Only used for development.

version: '3.7'

volumes:
  db-data:
    external: false
  redis-data:
    external: false

networks:
  frontend:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true

services:
  postgres:
    # 9.6 is freshest version available in Google Cloud SQL
    image: postgres:9.6-alpine
    env_file: .env
    volumes:
      - db-data:/var/lib/postgresql/db-data
    networks:
      - backend

  redis:
    image: redis:4.0.10-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend

  sidekiq:
    build: .
    env_file: .env
    depends_on:
      - redis
    command: "bin/bundle exec sidekiq -C config/sidekiq.yml"
    networks:
      - backend
      - frontend
    deploy:
      labels:
        traefik.port: 8080
        traefik.backend: "sidekiq"

  lb:
    image: traefik:1.7.18-alpine
    command: "--api --logLevel=DEBUG --docker --docker.swarmMode --docker.watch --docker.network=frontend"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml # Using labels and command args instead of toml
    networks:
      - frontend
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "false"

  web:
    build: .
    env_file: .env
    command: "bin/bundle exec rails s -p 3000 -b 0.0.0.0"
    volumes:
      - .:/beyondludus
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - lb
    networks:
      - backend
      - frontend
    deploy:
      labels:
        traefik.port: 80
        traefik.backend: "frontend"
        traefik.frontend.rule: "Host:web.docker.localhost"
        #traefik.backend.loadbalancer.stickiness: true
